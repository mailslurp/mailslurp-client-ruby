=begin
#MailSlurp API

#For documentation see [developer guide](https://www.mailslurp.com/developers). [Create an account](https://app.mailslurp.com) in the MailSlurp Dashboard to [view your API Key](https://app). For all bugs, feature requests, or help please [see support](https://www.mailslurp.com/support/).

OpenAPI spec version: 0.0.1-alpha
Contact: contact@mailslurp.dev
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.3.4

=end

require 'spec_helper'
require 'json'

# Unit tests for MailSlurpClient::CommonOperationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CommonOperationsApi' do
  before do
    # run before each test
    @instance = MailSlurpClient::CommonOperationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CommonOperationsApi' do
    it 'should create an instance of CommonOperationsApi' do
      expect(@instance).to be_instance_of(MailSlurpClient::CommonOperationsApi)
    end
  end

  # unit tests for create_new_email_address
  # Create new email address
  # Returns an Inbox with an &#x60;id&#x60; and an &#x60;emailAddress&#x60;
  # @param [Hash] opts the optional parameters
  # @return [Inbox]
  describe 'create_new_email_address test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_email_address
  # Delete email address and its emails
  # Deletes an inbox
  # @param inbox_id inboxId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_email_address test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_email_simple
  # Send an email from a random email address
  # To specify an email address first create an inbox and use that with the other send email methods
  # @param send_email_options sendEmailOptions
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'send_email_simple test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wait_for_latest_email
  # Fetch inbox&#39;s latest email or if empty wait for email to arrive
  # Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox see the other receive methods.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :inbox_email_address Email address of the inbox we are fetching emails from
  # @option opts [String] :inbox_id Id of the inbox we are fetching emails from
  # @return [Email]
  describe 'wait_for_latest_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wait_for_nth_email
  # Wait for or fetch the email with a given index in the inbox specified
  # @param [Hash] opts the optional parameters
  # @option opts [String] :inbox_id Id of the inbox we are fetching emails from
  # @option opts [Integer] :index Zero based index of the email to wait for
  # @return [Email]
  describe 'wait_for_nth_email test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
