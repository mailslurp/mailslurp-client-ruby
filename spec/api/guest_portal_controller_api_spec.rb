=begin
#MailSlurp API

#MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository

The version of the OpenAPI document: 6.5.2
Contact: contact@mailslurp.dev
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for MailSlurpClient::GuestPortalControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GuestPortalControllerApi' do
  before do
    # run before each test
    @api_instance = MailSlurpClient::GuestPortalControllerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GuestPortalControllerApi' do
    it 'should create an instance of GuestPortalControllerApi' do
      expect(@api_instance).to be_instance_of(MailSlurpClient::GuestPortalControllerApi)
    end
  end

  # unit tests for create_guest_portal
  # Create a portal page for your customers or clients to log into email accounts and view emails.
  # Create a guest login page for customers or clients to access assigned email addresses
  # @param create_portal_options 
  # @param [Hash] opts the optional parameters
  # @return [GuestPortalDto]
  describe 'create_guest_portal test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_guest_portal_user
  # Create a portal guest user
  # Add customer to portal
  # @param portal_id 
  # @param create_portal_user_options 
  # @param [Hash] opts the optional parameters
  # @return [GuestPortalUserCreateDto]
  describe 'create_guest_portal_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_guest_portal_users
  # Get all guest users for portal
  # Get all customers for a portal
  # @param [Hash] opts the optional parameters
  # @option opts [String] :portal_id Optional portal ID
  # @option opts [String] :search Optional search term
  # @option opts [Integer] :page Optional page index in list pagination
  # @option opts [Integer] :size Optional page size in list pagination
  # @option opts [String] :sort Optional createdAt sort direction ASC or DESC
  # @option opts [DateTime] :since Filter by created at after the given timestamp
  # @option opts [DateTime] :before Filter by created at before the given timestamp
  # @return [PageGuestPortalUsers]
  describe 'get_all_guest_portal_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_guest_portal
  # Get a client email portal
  # Fetch a customer guest portal
  # @param portal_id 
  # @param [Hash] opts the optional parameters
  # @return [GuestPortalDto]
  describe 'get_guest_portal test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_guest_portal_user
  # Get guest user for portal
  # Get customer for portal
  # @param portal_id 
  # @param guest_id 
  # @param [Hash] opts the optional parameters
  # @return [GuestPortalUserDto]
  describe 'get_guest_portal_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_guest_portal_user_by_id
  # Get guest user
  # Get customer by ID
  # @param guest_id 
  # @param [Hash] opts the optional parameters
  # @return [GuestPortalUserDto]
  describe 'get_guest_portal_user_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_guest_portal_users
  # Get all guest users for portal
  # Get customers for a portal
  # @param portal_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Optional search term
  # @option opts [Integer] :page Optional page index in list pagination
  # @option opts [Integer] :size Optional page size in list pagination
  # @option opts [String] :sort Optional createdAt sort direction ASC or DESC
  # @option opts [DateTime] :since Filter by created at after the given timestamp
  # @option opts [DateTime] :before Filter by created at before the given timestamp
  # @return [PageGuestPortalUsers]
  describe 'get_guest_portal_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_guest_portals
  # Get guest portals
  # Get portals
  # @param [Hash] opts the optional parameters
  # @return [Array<GuestPortalDto>]
  describe 'get_guest_portals test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
