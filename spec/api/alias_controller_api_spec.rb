=begin
#MailSlurp API

#MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 

The version of the OpenAPI document: d1659dc1567a5b62f65d0612107a50aace03e085

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for MailSlurpClient::AliasControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AliasControllerApi' do
  before do
    # run before each test
    @api_instance = MailSlurpClient::AliasControllerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AliasControllerApi' do
    it 'should create an instance of AliasControllerApi' do
      expect(@api_instance).to be_instance_of(MailSlurpClient::AliasControllerApi)
    end
  end

  # unit tests for create_alias
  # Create an email alias
  # Create an email alias belonging to a user ID. To create anonymous aliases use the &#x60;createAnonymousAlias&#x60; method.
  # @param create_owned_alias_options createOwnedAliasOptions
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_alias test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_anonymous_alias
  # Create an anonymous email alias
  # @param create_anonymous_alias_options createAnonymousAliasOptions
  # @param [Hash] opts the optional parameters
  # @return [ModelAlias]
  describe 'create_anonymous_alias test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_alias
  # Delete an owned alias
  # @param alias_id aliasId
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_alias test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_alias
  # Get an email alias
  # Get an email alias by ID
  # @param alias_id aliasId
  # @param [Hash] opts the optional parameters
  # @return [ModelAlias]
  describe 'get_alias test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_aliases
  # Get all email aliases
  # Get all email aliases in paginated form
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Optional page index in alias list pagination
  # @option opts [Integer] :size Optional page size in alias list pagination
  # @option opts [String] :sort Optional createdAt sort direction ASC or DESC
  # @return [PageAlias]
  describe 'get_aliases test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_alias
  # Update an owned alias
  # @param alias_id aliasId
  # @param create_owned_alias_options createOwnedAliasOptions
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_alias test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
