=begin
#MailSlurp API

#MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 

The version of the OpenAPI document: d1659dc1567a5b62f65d0612107a50aace03e085

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for MailSlurpClient::AttachmentControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AttachmentControllerApi' do
  before do
    # run before each test
    @api_instance = MailSlurpClient::AttachmentControllerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AttachmentControllerApi' do
    it 'should create an instance of AttachmentControllerApi' do
      expect(@api_instance).to be_instance_of(MailSlurpClient::AttachmentControllerApi)
    end
  end

  # unit tests for upload_attachment
  # Upload an attachment for sending
  # When sending emails with attachments first upload each attachment with this endpoint. Record the returned attachment IDs. Then use these attachment IDs in the SendEmailOptions when sending an email. This means that attachments can easily be reused.
  # @param upload_options uploadOptions
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'upload_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_multipart_form
  # Upload an attachment for sending using Multipart Form
  # When sending emails with attachments first upload each attachment with this endpoint. Record the returned attachment IDs. Then use these attachment IDs in the SendEmailOptions when sending an email. This means that attachments can easily be reused.
  # @param file file
  # @param [Hash] opts the optional parameters
  # @option opts [String] :content_type contentType
  # @option opts [String] :filename filename
  # @option opts [String] :x_filename x-filename
  # @return [Array<String>]
  describe 'upload_multipart_form test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
